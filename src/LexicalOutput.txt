Tokens          Lexemes

type        int
main        main
(           (
)           )
{           {
comment     //Declarations

type        int
id          integer
;           ;
type        bool
id          boolN
;           ;
type        char
id          charChar
;           ;
type        float
id          floatY
;           ;
type        int
id          intR
;           ;
type        bool
id          boolTruth
;           ;
type        float
id          floater
;           ;
type        char
id          laterInit
;           ;
type        float
id          largeValue
;           ;
comment     //Initializations

id          integer
assignOp    =
intLiteral  200
;           ;
id          boolN
assignOp    =
boolLiteral false
;           ;
id          charChar
assignOp    =
charLiteral N
;           ;
id          floatY
assignOp    =
floatLiteral 12.12
;           ;
id          intR
assignOp    =
intLiteral  25
;           ;
id          boolTruth
assignOp    =
boolLiteral true
;           ;
id          floater
assignOp    =
floatLiteral 0.12
;           ;
id          largeValue
assignOp    =
floatLiteral 4879.76
;           ;
comment     //Statements

while       while
(           (
id          floatY
relOp       <
id          integer
)           )
id          floatY
assignOp    =
id          floatY
addOp       +
id          intR
;           ;
print       print
id          floatY
;           ;
if          if
(           (
id          floatY
equOp       ==
intLiteral  212
addOp       +
id          floater
)           )
print       print
charLiteral Y
;           ;
else        else
print       print
id          charChar
;           ;
id          laterInit
assignOp    =
id          charChar
;           ;
if          if
(           (
id          charChar
equOp       ==
id          laterInit
&&          &&
id          boolN
||          ||
id          floatY
multOp      *
intLiteral  23
addOp       +
intLiteral  1
equOp       ==
id          largeValue
multOp      /
intLiteral  2
addOp       +
id          largeValue
multOp      /
intLiteral  2
)           )
print       print
id          boolTruth
;           ;
else        else
print       print
id          boolN
;           ;
if          if
(           (
id          floatY
relOp       <
id          intR
relOp       <
intLiteral  1
)           )
print       print
id          floatY
;           ;
else        else
while       while
(           (
id          floatY
relOp       >
intLiteral  50
)           )
id          floatY
assignOp    =
id          floatY
addOp       -
id          intR
;           ;
print       print
id          floatY
;           ;
}           }
